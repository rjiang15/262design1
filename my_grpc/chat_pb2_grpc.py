# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

# import Chat_pb2 as Chat__pb2
# from . import chat_pb2 as Chat__pb2
from my_grpc import chat_pb2 as Chat__pb2
# import my_grpc.chat_pb2 as Chat__pb2

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

# GRPC_GENERATED_VERSION = '1.70.0'
# GRPC_VERSION = my_grpc.__version__
# _version_not_supported = False

# try:
#     from my_grpc._utilities import first_version_is_lower
#     _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
# except ImportError:
#     _version_not_supported = True

# if _version_not_supported:
#     raise RuntimeError(
#         f'The grpc package installed is at version {GRPC_VERSION},'
#         + f' but the generated code in Chat_pb2_grpc.py depends on'
#         + f' grpcio>={GRPC_GENERATED_VERSION}.'
#         + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
#         + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
#     )


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ShowDB = channel.unary_unary(
                '/chat.ChatService/ShowDB',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=Chat__pb2.ShowDBResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/chat.ChatService/List',
                request_serializer=Chat__pb2.ListRequest.SerializeToString,
                response_deserializer=Chat__pb2.ListResponse.FromString,
                _registered_method=True)
        self.ListConversations = channel.unary_unary(
                '/chat.ChatService/ListConversations',
                request_serializer=Chat__pb2.ListConversationsRequest.SerializeToString,
                response_deserializer=Chat__pb2.ListConversationsResponse.FromString,
                _registered_method=True)
        self.ReadInbox = channel.unary_unary(
                '/chat.ChatService/ReadInbox',
                request_serializer=Chat__pb2.ReadInboxRequest.SerializeToString,
                response_deserializer=Chat__pb2.ReadInboxResponse.FromString,
                _registered_method=True)
        self.ReadConvo = channel.unary_unary(
                '/chat.ChatService/ReadConvo',
                request_serializer=Chat__pb2.ReadConvoRequest.SerializeToString,
                response_deserializer=Chat__pb2.ReadConvoResponse.FromString,
                _registered_method=True)
        self.ReadFullConvo = channel.unary_unary(
                '/chat.ChatService/ReadFullConvo',
                request_serializer=Chat__pb2.ReadConvoRequest.SerializeToString,
                response_deserializer=Chat__pb2.ReadConvoResponse.FromString,
                _registered_method=True)
        self.PollConvo = channel.unary_unary(
                '/chat.ChatService/PollConvo',
                request_serializer=Chat__pb2.PollConvoRequest.SerializeToString,
                response_deserializer=Chat__pb2.PollConvoResponse.FromString,
                _registered_method=True)
        self.CreateAccount = channel.unary_unary(
                '/chat.ChatService/CreateAccount',
                request_serializer=Chat__pb2.AccountRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/chat.ChatService/Login',
                request_serializer=Chat__pb2.AccountRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/chat.ChatService/Logout',
                request_serializer=Chat__pb2.AccountRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.DeleteAccount = channel.unary_unary(
                '/chat.ChatService/DeleteAccount',
                request_serializer=Chat__pb2.AccountRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=Chat__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.DeleteMessage = channel.unary_unary(
                '/chat.ChatService/DeleteMessage',
                request_serializer=Chat__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)
        self.MarkRead = channel.unary_unary(
                '/chat.ChatService/MarkRead',
                request_serializer=Chat__pb2.MarkReadRequest.SerializeToString,
                response_deserializer=Chat__pb2.Response.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ShowDB(self, request, context):
        """Debug
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Listing accounts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConversations(self, request, context):
        """Listing conversations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadInbox(self, request, context):
        """Reading from inbox
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadConvo(self, request, context):
        """Reading partial conversation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFullConvo(self, request, context):
        """Reading full conversation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollConvo(self, request, context):
        """Polling conversation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Account management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Send message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Delete message(s)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkRead(self, request, context):
        """Mark read
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ShowDB': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowDB,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=Chat__pb2.ShowDBResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=Chat__pb2.ListRequest.FromString,
                    response_serializer=Chat__pb2.ListResponse.SerializeToString,
            ),
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=Chat__pb2.ListConversationsRequest.FromString,
                    response_serializer=Chat__pb2.ListConversationsResponse.SerializeToString,
            ),
            'ReadInbox': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadInbox,
                    request_deserializer=Chat__pb2.ReadInboxRequest.FromString,
                    response_serializer=Chat__pb2.ReadInboxResponse.SerializeToString,
            ),
            'ReadConvo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadConvo,
                    request_deserializer=Chat__pb2.ReadConvoRequest.FromString,
                    response_serializer=Chat__pb2.ReadConvoResponse.SerializeToString,
            ),
            'ReadFullConvo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFullConvo,
                    request_deserializer=Chat__pb2.ReadConvoRequest.FromString,
                    response_serializer=Chat__pb2.ReadConvoResponse.SerializeToString,
            ),
            'PollConvo': grpc.unary_unary_rpc_method_handler(
                    servicer.PollConvo,
                    request_deserializer=Chat__pb2.PollConvoRequest.FromString,
                    response_serializer=Chat__pb2.PollConvoResponse.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=Chat__pb2.AccountRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=Chat__pb2.AccountRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=Chat__pb2.AccountRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=Chat__pb2.AccountRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=Chat__pb2.SendMessageRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=Chat__pb2.DeleteMessageRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
            'MarkRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkRead,
                    request_deserializer=Chat__pb2.MarkReadRequest.FromString,
                    response_serializer=Chat__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ShowDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ShowDB',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            Chat__pb2.ShowDBResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/List',
            Chat__pb2.ListRequest.SerializeToString,
            Chat__pb2.ListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ListConversations',
            Chat__pb2.ListConversationsRequest.SerializeToString,
            Chat__pb2.ListConversationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadInbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ReadInbox',
            Chat__pb2.ReadInboxRequest.SerializeToString,
            Chat__pb2.ReadInboxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadConvo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ReadConvo',
            Chat__pb2.ReadConvoRequest.SerializeToString,
            Chat__pb2.ReadConvoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadFullConvo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ReadFullConvo',
            Chat__pb2.ReadConvoRequest.SerializeToString,
            Chat__pb2.ReadConvoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PollConvo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/PollConvo',
            Chat__pb2.PollConvoRequest.SerializeToString,
            Chat__pb2.PollConvoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CreateAccount',
            Chat__pb2.AccountRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Login',
            Chat__pb2.AccountRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Logout',
            Chat__pb2.AccountRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteAccount',
            Chat__pb2.AccountRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendMessage',
            Chat__pb2.SendMessageRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteMessage',
            Chat__pb2.DeleteMessageRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/MarkRead',
            Chat__pb2.MarkReadRequest.SerializeToString,
            Chat__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
